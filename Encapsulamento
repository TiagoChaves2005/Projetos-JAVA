/**
 * Classe para instanciar objetos encapsulados da classe Conta
 * @author 2830482311018
 * data: 17/10/2024
 */
public class Banco {
    public static void main(String[] args){
        Conta cc = new Conta("Gervásio", 1000f,1234);
        cc.exibirDadosConta();
        cc.realizarSaque();
        cc.exibirDadosConta();
    }//Fim do main
    
}//Fim da Classe

/*****************************************************************************************************************************************************/


import javax.swing.JOptionPane;

/**
 * Classe para demonstrar o principio do Encapsulamento
 * @author Tiago Chaves
 * Data: 17/10/2024
 */
public class Conta {
    String cliente;
    private float saldo;
    private int senha;
    private boolean bloqueado;
    int tentativas = 0;
    
    //  construtor da classe
    public Conta(String cliente, float saldo, int senha){
        this.cliente = cliente;
        this.saldo = saldo;
        this.senha = senha;
        this.bloqueado = false;
    }
    
    public void exibirDadosConta(){
        System.out.println("Nome do Cliente: " + cliente);
        System.out.println("Saldo do Cliente: " + saldo);        
        System.out.println("Possui bloqueio de conta? " + (isBloqueado() == true?"Sim":"Não"));    
    }
    
    //Método para realizar um saque na conta do cliente
    public void realizarSaque(){
        int pwd = 0;
        pwd = Integer.parseInt(JOptionPane.showInputDialog("Senha: "));
        
        if(!verificarSenha(pwd)){
            JOptionPane.showMessageDialog(null, "Senha inválida!");
            if(!isBloqueado())
                realizarSaque();
        }
        else{
            float vlrSaque = 0;
            vlrSaque = Float.parseFloat(JOptionPane.showInputDialog("Valor a sacar"));
          if(getSaldo() < vlrSaque)
              JOptionPane.showMessageDialog(null, "Saldo insuficiente");
          else
            setSaldo(getSaldo()-vlrSaque);
        }//Fim do primeiro Else
    }//Fim do realizarSaque
    
    //Método para verificar a senha
    private boolean verificarSenha(int pwd){
        
        if(pwd == getSenha())
            return true;
        else{
            if(tentativas > 2){
                JOptionPane.showMessageDialog(null, "Conta bloqueada!!");
                setBloqueado (true);
            }
            else
                tentativas++;
            return false;
        }
    }


 
    //Método assessor
    public void setCliente(String cliente){
        this.cliente = cliente;
    }
    
    public String getCliente(){
        return this.cliente;
    }
    
    private void setSaldo(float saldo){
        this.saldo = saldo;
    }
    
    private float getSaldo(){
        return this.saldo;
    }
    
    public void setSenha(int senha){
        this.senha = senha;
    }
    
    public int getSenha(){
        return this.senha;
    }

    public boolean isBloqueado() {
        return bloqueado;
    }

    public void setBloqueado(boolean bloqueado) {
        this.bloqueado = bloqueado;
    }
    
    
    
}//Fim da classe
